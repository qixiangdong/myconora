{"version":3,"sources":["components/TodayData.js","App.js","serviceWorker.js","index.js"],"names":["Text","Typography","Title","Paragraph","TodayData","Date","format","justify","gutter","span","title","value","this","props","todayData","confirmedCase","total","valueStyle","color","recoveredCase","pendingCase","deathCase","changes","React","Component","prototype","fmt","o","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","k","test","replace","RegExp","$1","getFullYear","substr","length","App","className","chart","Chart","container","autoFit","height","data","日期","type","人数","scale","range","nice","tooltip","showCrosshairs","shared","line","position","shape","point","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.af6fad61.chunk.js","sourcesContent":["import React from 'react';\nimport { Statistic, Row, Col } from 'antd';\nimport { Badge } from 'antd';\nimport { ClockCircleOutlined } from '@ant-design/icons';\nimport { Typography, Divider } from 'antd';\n\nconst { Title, Paragraph, Text } = Typography;\n\n\nexport default class TodayData extends React.Component {\n    render() {\n        return (\n            <>\n                \n                <h3> 马来西亚COVID-19 统计数据 </h3>\n                <h4> {new Date().format(\"yyyy年MM月dd日\")} </h4>\n                <h5> 最后更新时间: 2020年3月11日 下午4点  </h5>\n                    <Row justify='center' gutter={6}>\n                        <Col span={6}>\n                            <Statistic title=\"确诊\" value={this.props.todayData.confirmedCase.total} valueStyle={{ color: '#cf1322' }} />\n                        </Col>\n                        <Col span={6}>\n                            <Statistic title=\"治愈\" value={this.props.todayData.recoveredCase.total} valueStyle={{ color: '#3f8600' }} />\n                        </Col>\n                        <Col span={6}>\n                            <Statistic title=\"等待检测结果\" value={this.props.todayData.pendingCase.total} valueStyle={{ color: '#b9bab8' }} />\n                        </Col>\n                        <Col span={6}>\n                            <Statistic title=\"死亡\" value={this.props.todayData.deathCase.total} valueStyle={{ color: '#000000' }} />\n                        </Col>\n                    </Row>\n\n                    <Row justify='center' gutter={6}>\n                        <Col span={6}>\n                            <Text>{this.props.todayData.confirmedCase.changes}</Text>\n                        </Col>\n                        <Col span={6}>\n                            <Text>{this.props.todayData.recoveredCase.changes}</Text>\n                        </Col>\n                        <Col span={6}>\n                            <Text>{this.props.todayData.pendingCase.changes}</Text>\n                        </Col>\n                        <Col span={6}>\n                            <Text>{this.props.todayData.deathCase.changes}</Text>\n                        </Col>\n                    </Row>\n            </>\n                    );\n                }\n            }\n            \nDate.prototype.format = function (fmt) {\n    var o = {\n                        \"M+\": this.getMonth() + 1, //月份\n                    \"d+\": this.getDate(), //日\n                    \"h+\": this.getHours(), //小时\n                    \"m+\": this.getMinutes(), //分\n                    \"s+\": this.getSeconds(), //秒\n                    \"q+\": Math.floor((this.getMonth() + 3) / 3), //季度\n                    \"S\": this.getMilliseconds() //毫秒\n                };\n    if (/(y+)/.test(fmt)) {\n                        fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n                }\n    for (var k in o) {\n        if (new RegExp(\"(\" + k + \")\").test(fmt)) {\n                        fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\n                }\n            }\n            return fmt;\n}","import React from 'react';\nimport {\n  Button\n} from 'antd';\nimport './App.css';\n\nimport TodayData from './components/TodayData';\nimport { Chart } from '@antv/g2';\n\nconst App = () => (\n  <div className=\"App\" >\n    <TodayData todayData={todayData} />\n  </div>\n);\n\nconst todayData = {\n  confirmedCase: {\n    total: 149,\n    changes: '+20'\n  },\n  recoveredCase: {\n    total: 26,\n    changes: '+1'\n  },\n  pendingCase: {\n    total: 239,\n    changes: '-23'\n  },\n  deathCase: {\n    total: 0,\n    changes: '-'\n  }\n}\n\nexport default App;\n\nconst data = [\n  { 日期: '2-11', type: '确诊', 人数: 18 },\n  { 日期: '2-12', type: '确诊', 人数: 18 },\n  { 日期: '2-13', type: '确诊', 人数: 19 },\n  { 日期: '2-14', type: '确诊', 人数: 19 },\n  { 日期: '2-15', type: '确诊', 人数: 22 },\n  { 日期: '2-16', type: '确诊', 人数: 22 },\n  { 日期: '2-17', type: '确诊', 人数: 22 },\n  { 日期: '2-18', type: '确诊', 人数: 22 },\n  { 日期: '2-19', type: '确诊', 人数: 22 },\n  { 日期: '2-20', type: '确诊', 人数: 22 },\n  { 日期: '2-21', type: '确诊', 人数: 22 },\n  { 日期: '2-22', type: '确诊', 人数: 22 },\n  { 日期: '2-23', type: '确诊', 人数: 22 },\n  { 日期: '2-24', type: '确诊', 人数: 22 },\n  { 日期: '2-25', type: '确诊', 人数: 22 },\n  { 日期: '2-26', type: '确诊', 人数: 22 },\n  { 日期: '2-27', type: '确诊', 人数: 23 },\n  { 日期: '2-28', type: '确诊', 人数: 23 },\n  { 日期: '2-29', type: '确诊', 人数: 25 },\n  { 日期: '3-1', type: '确诊', 人数: 29 },\n  { 日期: '3-2', type: '确诊', 人数: 29 },\n  { 日期: '3-3', type: '确诊', 人数: 36 },\n  { 日期: '3-4', type: '确诊', 人数: 50 },\n  { 日期: '3-5', type: '确诊', 人数: 50 },\n  { 日期: '3-6', type: '确诊', 人数: 83 },\n  { 日期: '3-7', type: '确诊', 人数: 93 },\n  { 日期: '3-8', type: '确诊', 人数: 99 },\n  { 日期: '3-9', type: '确诊', 人数: 117 },\n  { 日期: '3-10', type: '确诊', 人数: 129 },\n  { 日期: '3-11', type: '确诊', 人数: 149 },\n  { 日期: '3-12', type: '确诊', 人数: 149 },\n\n  { 日期: '2-11', type: '治愈', 人数: 3 },\n  { 日期: '2-12', type: '治愈', 人数: 3 },\n  { 日期: '2-13', type: '治愈', 人数: 3 },\n  { 日期: '2-14', type: '治愈', 人数: 3 },\n  { 日期: '2-15', type: '治愈', 人数: 7 },\n  { 日期: '2-16', type: '治愈', 人数: 7 },\n  { 日期: '2-17', type: '治愈', 人数: 7 },\n  { 日期: '2-18', type: '治愈', 人数: 13 },\n  { 日期: '2-19', type: '治愈', 人数: 15 },\n  { 日期: '2-20', type: '治愈', 人数: 15 },\n  { 日期: '2-21', type: '治愈', 人数: 15 },\n  { 日期: '2-22', type: '治愈', 人数: 15 },\n  { 日期: '2-23', type: '治愈', 人数: 15 },\n  { 日期: '2-24', type: '治愈', 人数: 18 },\n  { 日期: '2-25', type: '治愈', 人数: 18 },\n  { 日期: '2-26', type: '治愈', 人数: 18 },\n  { 日期: '2-27', type: '治愈', 人数: 18 },\n  { 日期: '2-28', type: '治愈', 人数: 18 },\n  { 日期: '2-29', type: '治愈', 人数: 18 },\n  { 日期: '3-1', type: '治愈', 人数: 18 },\n  { 日期: '3-2', type: '治愈', 人数: 18 },\n  { 日期: '3-3', type: '治愈', 人数: 22 },\n  { 日期: '3-4', type: '治愈', 人数: 22 },\n  { 日期: '3-4', type: '治愈', 人数: 22 },\n  { 日期: '3-6', type: '治愈', 人数: 22 },\n  { 日期: '3-7', type: '治愈', 人数: 23 },\n  { 日期: '3-8', type: '治愈', 人数: 24 },\n  { 日期: '3-9', type: '治愈', 人数: 24 },\n  { 日期: '3-10', type: '治愈', 人数: 24 },\n  { 日期: '3-11', type: '治愈', 人数: 26 },\n  { 日期: '3-12', type: '治愈', 人数: 26 },\n];\n\nconst chart = new Chart({\n  container: 'c1',\n  autoFit: true,\n  height: 500,\n});\n\nchart.data(data);\nchart.scale({\n  日期: {\n    range: [0, 1],\n  },\n  人数: {\n    nice: true,\n  },\n});\n\nchart.tooltip({\n  showCrosshairs: true,\n  shared: true,\n});\n\nchart\n  .line()\n  .position('日期*人数')\n  .color('type')\n  .shape('smooth');\n\nchart\n  .point()\n  .position('日期*人数')\n  .color('type')\n  .shape('circle');\n\nchart.render();","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}